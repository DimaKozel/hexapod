import type { Quaternion } from './Quaternion';
declare const MathUtils: {
    DEG2RAD: number;
    RAD2DEG: number;
    generateUUID(): string;
    clamp(value: number, min: number, max: number): number;
    euclideanModulo(n: number, m: number): number;
    mapLinear(x: number, a1: number, a2: number, b1: number, b2: number): number;
    inverseLerp(x: number, y: number, value: number): number;
    lerp(x: number, y: number, t: number): number;
    damp(x: number, y: number, lambda: number, dt: number): number;
    pingpong(x: number, length?: number): number;
    smoothstep(x: number, min: number, max: number): number;
    smootherstep(x: number, min: number, max: number): number;
    randInt(low: number, high: number): number;
    randFloat(low: number, high: number): number;
    randFloatSpread(range: number): number;
    seededRandom(s?: number | undefined): number;
    degToRad(degrees: number): number;
    radToDeg(radians: number): number;
    isPowerOfTwo(value: number): boolean;
    ceilPowerOfTwo(value: number): number;
    floorPowerOfTwo(value: number): number;
    setQuaternionFromProperEuler(q: Quaternion, a: number, b: number, c: number, order: string): void;
};
export { MathUtils };
